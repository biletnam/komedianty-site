/*
 *  FONTS
 */
@font-face {
  font-family: 'proba_proextralight';
  src: url("fonts/proba/proba_pro_extralight-webfont.eot");
  src: url("fonts/proba/proba_pro_extralight-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_extralight-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_extralight-webfont.woff") format('woff'), url("fonts/proba/proba_pro_extralight-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_extralight-webfont.svg#proba_proextralight") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_prolight_italic';
  src: url("fonts/proba/proba_pro_light_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_light_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_light_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_light_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_light_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_light_italic-webfont.svg#proba_prolight_italic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_proitalic';
  src: url("fonts/proba/proba_pro_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_italic-webfont.svg#proba_proitalic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_proextralight_italic';
  src: url("fonts/proba/proba_pro_extralight_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_extralight_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_extralight_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_extralight_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_extralight_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_extralight_italic-webfont.svg#proba_proextralight_italic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_probold';
  src: url("fonts/proba/proba_pro_bold-webfont.eot");
  src: url("fonts/proba/proba_pro_bold-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_bold-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_bold-webfont.woff") format('woff'), url("fonts/proba/proba_pro_bold-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_bold-webfont.svg#proba_probold") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_promedium_italic';
  src: url("fonts/proba/proba_pro_medium_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_medium_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_medium_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_medium_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_medium_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_medium_italic-webfont.svg#proba_promedium_italic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_prothin_italic';
  src: url("fonts/proba/proba_pro_thin_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_thin_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_thin_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_thin_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_thin_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_thin_italic-webfont.svg#proba_prothin_italic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_prolight';
  src: url("fonts/proba/proba_pro_light-webfont.eot");
  src: url("fonts/proba/proba_pro_light-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_light-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_light-webfont.woff") format('woff'), url("fonts/proba/proba_pro_light-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_light-webfont.svg#proba_prolight") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_probold_italic';
  src: url("fonts/proba/proba_pro_bold_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_bold_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_bold_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_bold_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_bold_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_bold_italic-webfont.svg#proba_probold_italic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_promedium';
  src: url("fonts/proba/proba_pro_medium-webfont.eot");
  src: url("fonts/proba/proba_pro_medium-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_medium-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_medium-webfont.woff") format('woff'), url("fonts/proba/proba_pro_medium-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_medium-webfont.svg#proba_promedium") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_proregular';
  src: url("fonts/proba/proba_pro_regular-webfont.eot");
  src: url("fonts/proba/proba_pro_regular-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_regular-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_regular-webfont.woff") format('woff'), url("fonts/proba/proba_pro_regular-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_regular-webfont.svg#proba_proregular") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_prothin';
  src: url("fonts/proba/proba_pro_thin-webfont.eot");
  src: url("fonts/proba/proba_pro_thin-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_thin-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_thin-webfont.woff") format('woff'), url("fonts/proba/proba_pro_thin-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_thin-webfont.svg#proba_prothin") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_prosemibold_italic';
  src: url("fonts/proba/proba_pro_semibold_italic-webfont.eot");
  src: url("fonts/proba/proba_pro_semibold_italic-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_semibold_italic-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_semibold_italic-webfont.woff") format('woff'), url("fonts/proba/proba_pro_semibold_italic-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_semibold_italic-webfont.svg#proba_prosemibold_italic") format('svg');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proba_prosemibold';
  src: url("fonts/proba/proba_pro_semibold-webfont.eot");
  src: url("fonts/proba/proba_pro_semibold-webfont.eot?#iefix") format('embedded-opentype'), url("fonts/proba/proba_pro_semibold-webfont.woff2") format('woff2'), url("fonts/proba/proba_pro_semibold-webfont.woff") format('woff'), url("fonts/proba/proba_pro_semibold-webfont.ttf") format('truetype'), url("fonts/proba/proba_pro_semibold-webfont.svg#proba_prosemibold") format('svg');
  font-weight: normal;
  font-style: normal;
}
/*
 *  NORMALIZE
 */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: 'Bitstream Vera Sans Mono', Consolas, Courier, monospace, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
/*
 *  GENERAL
 */
body {
  background-color: #222;
  color: #e6e6e6;
  font-size: 16px;
  font-family: "proba_proregular";
}
/*
 *  BASE TYPOGRAPHY
 */
h1 {
  font-size: 38.4px;
  font-size: 2.4rem;
  text-rendering: optimizelegibility;
  font-weight: bold;
  margin: 0.75em 0;
  line-height: 1.6em;
}
h2 {
  font-size: 28.8px;
  font-size: 1.8rem;
  text-rendering: optimizelegibility;
  font-weight: bold;
  margin: 0.75em 0;
  line-height: 1.6em;
}
h3 {
  font-size: 24px;
  font-size: 1.5rem;
  text-rendering: optimizelegibility;
  font-weight: bold;
  margin: 0.75em 0;
  line-height: 1.6em;
}
h4 {
  font-size: 20.8px;
  font-size: 1.3rem;
  text-rendering: optimizelegibility;
  font-weight: bold;
  margin: 0.75em 0;
  line-height: 1.6em;
}
h5 {
  font-size: 16px;
  font-size: 1rem;
  text-rendering: optimizelegibility;
  font-weight: bold;
  margin: 0.75em 0;
  line-height: 1.6em;
}
h6 {
  font-size: 14.4px;
  font-size: 0.9rem;
  text-rendering: optimizelegibility;
  font-weight: bold;
  margin: 0.75em 0;
  line-height: 1.6em;
  text-transform: uppercase;
}
pre {
  display: block;
  padding: 7px;
  background-color: #f5f5f5;
  border: 1px solid #e1e1e8;
  border-radius: 3px;
  white-space: pre-wrap;
  word-break: break-all;
  font-family: Menlo, Monaco, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;
  line-height: 160%;
}
code {
  padding: 3px 4px;
  color: #df5c33;
  background-color: #f5f5f5;
  border: 1px solid #e1e1e8;
  border-radius: 3px;
  font-family: Menlo, Monaco, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;
}
blockquote {
  border-left: 4px solid #0074d9;
  margin: 1em 0;
  padding-left: 1.5em;
}
blockquote:before,
blockquote:after {
  content: "";
  display: table;
}
blockquote:after {
  clear: both;
}
blockquote > p {
  font-weight: 300;
  font-size: 127%;
  font-size: 1.27rem;
  line-height: 127%;
  line-height: 1.27rem;
  margin-top: 0;
}
blockquote > cite,
blockquote > footer,
blockquote > figcaption {
  color: #888;
}
blockquote > cite:before,
blockquote > footer:before,
blockquote > figcaption:before {
  content: '\2014';
}
img {
  max-width: 100%;
}
a {
  color: #ff2e2e;
  text-decoration: none;
  transition: all .3s ease;
  border-bottom: 1px solid transparent;
}
a:hover {
  border-bottom: 1px solid;
}
a:hover {
  color: #ff0101;
}
a:visited {
  opacity: 0.8;
}
/*
 *  HEAD LOGO
 */
#masthead a {
  color: #fff;
  text-decoration: none;
  transition: all .3s ease;
  border-bottom: 1px solid transparent;
}
#masthead a:hover {
  border-bottom: 1px solid;
}
#masthead a:hover {
  color: #d9d9d9;
}
#masthead a:visited {
  opacity: 0.8;
}
#masthead .home-link {
  display: block;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  background: url("./main_logo.png") no-repeat;
  width: 266px;
  height: 66px;
}
#site-branding {
  float: left;
}
#site-branding h1 {
  margin: 0;
}
/*
 *  MENU
 */
#site-navigation {
  height: 67px;
}
#site-navigation .children {
  display: none;
}
#site-navigation .page_item_has_children.open .children {
  display: block;
}
#site-navigation .children {
  text-align: justify;
}
#site-navigation ul:after {
  content: " ";
  width: 100%;
  display: inline-block;
}
#site-navigation li {
  display: inline-block;
  margin: 47px 0 0;
  padding: 0;
}
#site-navigation li:after {
  content: ' ';
}
#main-menu ul ul {
  display: none;
}
#main-menu ul li.open ul {
  display: block;
}
/*
 *  CONTENT
 */
#page {
  max-width: 960px;
  margin: 0 auto;
  padding: 51.2px 76.80000000000001px;
  padding-top: 0;
  background-color: #222;
}
/*
 *  HOMEPAGE
 */
.hentry * + * {
  margin: 0;
  margin-top: 25.6px;
}
/*
 *  MAIN MENU
 */
#site-navigation .menu-toggle {
  display: none;
}
@media screen and (max-width: 600px) {
  #site-navigation .menu-toggle {
    display: block;
  }
}
#site-navigation .menu {
  display: block;
}
@media screen and (max-width: 599px) {
  #site-navigation .menu {
    display: none;
  }
}
/*
 *  SCENARIO
 */
.scenario .preamble {
  margin: 3em;
  margin-left: 10em;
  font-style: italic;
}
.scenario .act {
  margin-top: 2em;
  margin-left: 8em;
}
.scenario .act + .act {
  margin: 1em;
  margin-left: 8em;
  margin-bottom: 2em;
}
.scenario .character {
  margin-top: 2em;
  margin-bottom: 0.5em;
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 0.075em;
}
.scenario .character::after {
  content: ": ";
}
.scenario .tone {
  display: inline-block;
  margin: 0;
  font-style: italic;
}
.scenario .tone::before {
  content: " (";
}
.scenario .tone::after {
  content: ") ";
}
.scenario p {
  margin: 0.5em 0;
}
.poem2 {
  margin-top: 2em;
  margin-bottom: 2em;
}
.poem2 p {
  white-space: pre-wrap;
  margin: 0;
  margin-left: 12em;
  margin-bottom: 1em;
}
.poem2 cite {
  font-size: 0.8em;
}
.poem2 cite p {
  margin: 0;
  margin-left: 15em;
}
/*# sourceMappingURL=data:application/json;base64, */